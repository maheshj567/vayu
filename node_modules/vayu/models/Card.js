var util = require('util')
    , VMB = require('./VayuModelBase.js')
    , moment = require('moment');

function Card()
{
    VMB.call(this);
}

util.inherits(Card, VMB);

var p = Card.prototype;

p.getCards = function (userId, boardId, success, fail)
{
    this.Model.find({u: userId, b: boardId}, function (err, doc) {
        console.log(userId);
        console.log(boardId);

        if (err) {
            fail(err);
        } else {
            success(doc);
        }
    });
}

p.addCard = function (userId, bid, lid, name, success, fail)
{

    //TODO: handle multiple persons
    var c = new this.Model({
        b: bid,
        lid: lid,
        u: userId,
        n: name
    });
    this.saveModel(c, success, fail);
}

p.updateCard = function(userId, id, lid, name, dodos, success, fail) {
    this.Model.update({
        u: userId,
        _id: id
    }, {
        lid: lid,
        n: name,
        dodos: dodos
    }, function(err, numAff, response) {
        if(err) {
            fail(err);
        } else {
            // update only one word
            //TODO: error tracking
            console.log("affectd - " + numAff)
            if(numAff == 1) {
                success();
            }else{
                console.log("error saving card...");
                console.log(err);
                fail(err);
            }
        }
    });
}

p.deleteCard = function(userId, id, success, fail) {
    this.Model.remove({
        u: userId,
        _id: id
    }, function(err)
    {
        if(err)
        {
            fail(err);
        }else{
            success();
        }
    });
}

p.deleteAll = function(userId, success, fail) {
    this.Model.remove({
        u: userId
    }, function(err)
    {
        if(err)
        {
            fail(err);
        }else{
            success();
        }
    });
}

var card = new Card();

card.init('Card', 'card', {
    //user id
    u: { type: card.Schema.ObjectId, ref: "User" },
    //board
    b: String,
    //id from frontend (local)
    lid: String,
    //name
    n: String,
    //cards
    //TODO: shorten the name
    dodos: [],
    //created date
    cd: { "type": Date, "default": Date.now },
    //date for displaying on the frontend
});

module.exports = exports = card;