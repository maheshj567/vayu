var util = require('util')
    , VMB = require('./VayuModelBase.js')
    , moment = require('moment');

function VTodo()
{
    VMB.call(this);
}

util.inherits(VTodo, VMB);

var p = VTodo.prototype;

p.getVTodos = function (userId, boardId, success, fail)
{
    this.Model.find({u: userId, b: boardId}, function (err, docs) {
        if (err) {
            fail(err);
        } else {
            success(docs);
        }
    });
}

p.addVTodo = function (userId, bid, cid, lid, title, success, fail)
{

    //TODO: handle multiple persons
    var t = new this.Model({
        b: bid,
        c: cid,
        lid: lid,
        u: userId,
        t: title
    });
    this.saveModel(t, success, fail);
}

p.updateVTodo = function(userId, id, lid, title, done, success, fail) {

    this.Model.update({
        u: userId,
        _id: id
    }, {
        lid: lid,
        t: title,
        d: done
    }, function(err, numAff, response) {
        if(err) {
            fail(err);
        } else {
            //update only one todo
            //TODO: error tracking
            console.log("affectd todos - " + numAff)
            if(numAff == 1) {
                success();
            }else{
                console.log("error saving vtodo...");
                console.log(err);
                fail(err);
            }
        }
    });
}

p.deleteAll = function(userId, success, fail) {
    this.Model.remove({
        u: userId
    }, function(err)
    {
        if(err)
        {
            fail(err);
        }else{
            success();
        }
    });
}

var vtodo = new VTodo();

vtodo.init('VTodo', 'vtodo', {
    //user id
    u: { type: vtodo.Schema.ObjectId, ref: "User" },
    //card
    c: String,
    //board
    b: String,
    //id from frontend (local)
    lid: String,
    //title (not name)
    t: String,
    //done?
    d: { "type": Number, "default": 0} ,
    //created date
    cd: { "type": Date, "default": Date.now },
});

module.exports = exports = vtodo;